
interface B {

}

class A implements B{

    private int a;
    private boolean b;
    public A obj;
    public B objInt;

    // chequeo parentesis en binaria
    A m1(){
        // llamadas a metodo en exp binaria
        a = (m2(1) + m2(0)) - (a / m2(8) % a);
        b = (m3() || m3()) && m3();
        // llamada a met, conforma tipo igual
        b = m1() == obj;
        b = m1() != obj;
        // llamada a met, conforma subtipo
        b = (objInt == m1()); b = (objInt != m1());
        b = (m1() != objInt); b = (m1()) == (objInt);
        return obj;
    }

    int m2(int a){
        return (1) + ((1)) - (5 / 7 % 1); // solo literales
    }

    boolean m3(){
        return ((true) || (true && true) || false); // solo literales
    }

    // chequeo unaria
    boolean unaria(){
        var a = 1;
        var b = +(a);
        b = (-a);
        a = +(5);
        a = (((-b)));

        return !(true) && (!unaria()) || (!(false)) || unaria();
    }

    // chequeo literales

    void literales(){
        var litEnt = ((((123456789))));
        litEnt -= (((((((1)))))));
        var litBool = (true);
        litBool = (false);
        var litChar = ('a');
        litChar = ('4');
        var litString = (("hola"));
        litString = ("");
        litString = (((null))); // null conforma con tipo clase
    }

    static void main(){

    }

}